---
title: "Client Report - Project 2"
subtitle: "Course DS 250"
author: "Nathan Lunceford"
format:
  html:
    self-contained: true
    page-layout: full
    title-block-banner: true
    toc: true
    toc-depth: 3
    toc-location: body
    number-sections: false
    html-math-method: katex
    code-fold: true
    code-summary: "Show the code"
    code-overflow: wrap
    code-copy: hover
    code-tools:
        source: false
        toggle: true
        caption: See code
    
---

```{python}
#| label: libraries
#| include: false
import pandas as pd
import altair as alt
import numpy as np

from IPython.display import Markdown
from IPython.display import display
from tabulate import tabulate
```


## Elevator pitch

_paste your elevator pitch here_

```{python}
#| label: project data
#| code-summary: Read and format project data
# Include and execute your code here
dat = pd.read_csv("https://github.com/byuidatascience/data4names/raw/master/data-raw/names_year/names_year.csv")
```

__Highlight the grand questions__

## GRAND QUESTION 1

__Which airport has the worst delays? Discuss the metric you chose, and why you chose it to determine the “worst” airport. Your answer should include a summary table that lists (for each airport) the total number of flights, total number of delayed flights, proportion of delayed flights, and average delay time in hours.__

_type your results and analysis here_

```{python}
#| label: GQ1
#| code-summary: Read and format data
# Include and execute your code here

# Load dataset
df = pd.read_json('flights_missing.json')

# Filter data
filter_df = df.filter(['airport_code', 'num_of_flights_total', 'num_of_delays_late_aircraft', 'minutes_delayed_total' ])

# Remove rows with negative values
filter_df = filter_df.query('num_of_delays_late_aircraft > 0')

# Group by airport code
group = filter_df.groupby('airport_code').agg('sum')

# Add and calculate delay rate percentage and average_delay_hours columns
group['delay_rate_percent'] = (group['num_of_delays_late_aircraft']/group['num_of_flights_total'])*100

group['average_delay_hours'] = (group['minutes_delayed_total']/group['num_of_delays_late_aircraft'])/60
 
# Drop minutes_delayed_total column

final = group.drop('minutes_delayed_total', axis=1)
final

```

_include figures in chunks and discuss your findings in the figure._


## GRAND QUESTION 2

__What is the best month to fly if you want to avoid delays of any length? Discuss the metric you chose and why you chose it to calculate your answer. Include one chart to help support your answer, with the x-axis ordered by month. (To answer this question, you will need to remove any rows that are missing the Month variable.)__

_type your results and analysis here_

```{python}
#| label: GQ2
#| code-summary: Read and format data
# Include and execute your code here


```

_include figures in chunks and discuss your findings in the figure._

```{python}
#| label: GQ2 chart
#| code-summary: plot example
#| fig-cap: "My useless chart"
#| fig-align: center
# Include and execute your code here
alt.Chart(dat.head(200))\
    .encode(x = "name", y = "AK")\
    .mark_bar()
```


```{python}
#| label: GQ2 table
#| code-summary: table example
#| tbl-cap: "Not much of a table"
#| tbl-cap-location: top
# Include and execute your code here
mydat = dat.head(1000)\
    .groupby('year')\
    .sum()\
    .reset_index()\
    .tail(10)\
    .filter(["year", "AK","AR"])

display(mydat)

```


## GRAND QUESTION 3

__According to the BTS website, the “Weather” category only accounts for severe weather delays. Mild weather delays are not counted in the “Weather” category, but are actually included in both the “NAS” and “Late-Arriving Aircraft” categories. Your job is to create a new column that calculates the total number of flights delayed by weather (both severe and mild). You will need to replace all the missing values in the Late Aircraft variable with the mean. Show your work by printing the first 5 rows of data in a table. Use these three rules for your calculations:


a. 100% of delayed flights in the Weather category are due to weather

b. 30% of all delayed flights in the Late-Arriving category are due to weather.

c.From April to August, 40% of delayed flights in the NAS category are due to weather. The rest of the months, the proportion rises to 65%.__

_type your results and analysis here_

```{python}
#| label: GQ3
#| code-summary: Read and format data
# Include and execute your code here


```

_include figures in chunks and discuss your findings in the figure._

```{python}
#| label: GQ3 chart
#| code-summary: plot example
#| fig-cap: "My useless chart"
#| fig-align: center
# Include and execute your code here
alt.Chart(dat.head(200))\
    .encode(x = "name", y = "AK")\
    .mark_bar()
```


```{python}
#| label: GQ3 table
#| code-summary: table example
#| tbl-cap: "Not much of a table"
#| tbl-cap-location: top
# Include and execute your code here
mydat = dat.head(1000)\
    .groupby('year')\
    .sum()\
    .reset_index()\
    .tail(10)\
    .filter(["year", "AK","AR"])

display(mydat)

```

## GRAND QUESTION 4

__Using the new weather variable calculated above, create a barplot showing the proportion of all flights that are delayed by weather at each airport. Discuss what you learn from this graph.__

_type your results and analysis here_

```{python}
#| label: GQ4
#| code-summary: Read and format data
# Include and execute your code here


```

_include figures in chunks and discuss your findings in the figure._



## GRAND QUESTION 5

__Fix all of the varied missing data types in the data to be consistent (all missing values should be displayed as “NaN”). In your report include one record example (one row) from your new data, in the raw JSON format. Your example should display the “NaN” for at least one missing value.__

_type your results and analysis here_

```{python}
#| label: GQ5
#| code-summary: Read and format data
# Include and execute your code here


```

_include figures in chunks and discuss your findings in the figure._
## APPENDIX A (Additional Python Code)

```python
#paste other your code from your python file (.py) here
```
