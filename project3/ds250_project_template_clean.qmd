---
title: "Client Report - Project 3"
subtitle: "Course DS 250"
author: "Nathan Lunceford"
format:
  html:
    self-contained: true
    page-layout: full
    title-block-banner: true
    toc: true
    toc-depth: 3
    toc-location: body
    number-sections: false
    html-math-method: katex
    code-fold: true
    code-summary: "Show the code"
    code-overflow: wrap
    code-copy: hover
    code-tools:
        source: false
        toggle: true
        caption: See code
    
---

```{python}
#| label: libraries
#| include: false
import pandas as pd
import altair as alt
import numpy as np

from IPython.display import Markdown
from IPython.display import display
from tabulate import tabulate
import sqlite3
```


## Elevator pitch

_paste your elevator pitch here_


__Highlight the grand questions__

## GRAND QUESTION 1

__Write an SQL query to create a new dataframe about baseball players who attended BYU-Idaho. The new table should contain five columns: playerID, schoolID, salary, and the yearID/teamID associated with each salary. Order the table by salary (highest to lowest) and print out the table in your report.__

_type your results and analysis here_

```{python}
#| label: GQ1
#| code-summary: Read and format data
# Include and execute your code here

# Load Dataset
con = sqlite3.connect("lahmansbaseballdb.sqlite")

# SQL Query
sql = """
SELECT DISTINCT
    p.playerid, c.schoolid, s.salary, s.yearid, s.teamid
FROM
    people AS p
JOIN CollegePlaying as c ON p.playerid = c.playerid
JOIN Salaries as s ON c.playerid = s.playerid
WHERE c.schoolid = 'idbyuid'
ORDER BY s.salary DESC
"""

df = pd.read_sql_query(sql, con)
df

```

_include figures in chunks and discuss your findings in the figure._


## GRAND QUESTION 2

__This three-part question requires you to calculate batting average (number of hits divided by the number of at-bats)__

_a. Write an SQL query that provides playerID, yearID, and batting average for players with at least 1 at bat that year. Sort the table from highest batting average to lowest, and then by playerid alphabetically. Show the top 5 results in your report._

```{python}
#| label: GQ2a
#| code-summary: Read and format data
# Include and execute your code here
# SQL Query


sql = """
SELECT
    b.playerid AS Player_ID, b.yearid, sum(b.ab) AS At_Bat, sum(b.h) AS Hits, 
    CAST(SUM(b.h) AS FLOAT) / NULLIF(SUM(b.ab), 0) AS Batting_Average
FROM
    batting AS b
GROUP BY
    b.playerid,
    b.yearid
HAVING
    sum(b.ab) >= 1
ORDER BY 
5 DESC,
1 ASC
"""

df = pd.read_sql_query(sql, con)
df.head(5)

```

_b. Use the same query as above, but only include players with at least 10 at bats that year. Print the top 5 results._

```{python}
#| label: GQ2b
#| code-summary: Read and format data
# Include and execute your code here
# SQL Query


sql2 = """
SELECT
    b.playerid AS Player_ID, b.yearid, sum(b.ab) AS At_Bat, sum(b.h) AS Hits, 
    CAST(SUM(b.h) AS FLOAT) / NULLIF(SUM(b.ab), 0) AS Batting_Average
FROM
    batting AS b
GROUP BY
    b.playerid,
    b.yearid
HAVING
    sum(b.ab) >= 10
ORDER BY 
5 DESC,
1 ASC
"""

df2 = pd.read_sql_query(sql2, con)

df2.head(5)
```

_c. Now calculate the batting average for players over their entire careers (all years combined). Only include players with at least 100 at bats, and print the top 5 results._

```{python}
#| label: GQ2c
#| code-summary: Read and format data
# Include and execute your code here
# SQL Query

sql3 = """
SELECT
    b.playerid AS Player_ID,
    SUM(b.ab) AS At_Bat,
    SUM(b.h) AS Hits,
    CAST(SUM(b.h) AS FLOAT) / NULLIF(SUM(b.ab), 0) AS Career_Batting_Average
FROM
    batting AS b
GROUP BY
    b.playerid
HAVING
    SUM(b.ab) >= 100
ORDER BY
    Career_Batting_Average DESC;
"""

df3 = pd.read_sql_query(sql3, con)
df3.head(5)
```

_include figures in chunks and discuss your findings in the figure._



## GRAND QUESTION 3

__Pick any two baseball teams and compare them using a metric of your choice (average salary, home runs, number of wins, etc). Write an SQL query to get the data you need, then make a graph in Altair to visualize the comparison. What do you learn?__

_type your results and analysis here_

```{python}
#| label: GQ3
#| code-summary: Read and format data
# Include and execute your code here


```

_include figures in chunks and discuss your findings in the figure._


## APPENDIX A (Additional Python Code)

```python
#paste other your code from your python file (.py) here
```
