---
title: "Practice Coding Challenge"
subtitle: "Course DS 250"
author: "Nathan Lunceford"
format:
  html:
    self-contained: true
    page-layout: full
    title-block-banner: true
    toc: true
    toc-depth: 3
    toc-location: body
    number-sections: false
    html-math-method: katex
    code-fold: true
    code-summary: "Show the code"
    code-overflow: wrap
    code-copy: hover
    code-tools:
        source: false
        toggle: true
        caption: See code
---

## Practice Coding Challenge

### Name: _Nathan Lunceford_

### Instructions

_In the Final Coding Challenge I will ask you to complete problems about as challenging as what is shown below.  Plus, you will need to fit a machine learning model with data I provide._

_Remember, you will only have 60 minutes to work on the challenge! You will not be able to complete every question perfectly, but you should spend at least a little time on each question._

_Paste your answers and code inside this `.qmd` file._


### Practice Challenges

Start by loading these packages and data:

```{python}

import pandas as pd
import altair as alt
import numpy as np

dat = pd.read_csv('https://github.com/byuidatascience/data4missing/raw/master/data-raw/mtcars_missing/mtcars_missing.csv')

```

<br>

**Question 1:** Try recreating the chart below using the [mtcars missing](https://github.com/byuidatascience/data4missing/raw/master/data-raw/mtcars_missing/mtcars_missing.csv) data that you've already loaded.

- Note that `hp` has missing values, and you will have to replace them with the mean.
- Please drop all cars with a missing name.

![](practice_mtcars.png)

**Question 1 Answer:**

_Show your chart here._

**Question 1 Code:**

```{python}
# Paste your code here.

import pandas as pd
import altair as alt
import numpy as np

df = pd.read_csv('https://github.com/byuidatascience/data4missing/raw/master/data-raw/mtcars_missing/mtcars_missing.csv')

df = df.dropna(subset=['car'])

mean = df['hp'].mean()

df['hp'].replace(np.nan, mean, inplace=True)

chart = alt.Chart(df).mark_circle(color='red').encode(
    x=alt.X('hp', title='Horse Power'),
    y=alt.Y('mpg', title='Miles per Gallon')
).properties(
    title={'text': 'This is awesome.', 'anchor': 'start'}
)


line80df = pd.DataFrame({'hp': [80]})

line80 = alt.Chart(line80df).mark_rule().encode(x = "hp")

line80label = alt.Chart(line80df).mark_text(
    text='Big',
    align='right',
    baseline='middle',
    dx=-10,
    dy=85
).encode(
    x='hp',
    y=alt.value(0)  # adjust label position
)



line80labelline = line80 + line80label


line160df = pd.DataFrame({'hp': [160]})

line160 = alt.Chart(line160df).mark_rule().encode(x = "hp")

line160label = alt.Chart(line160df).mark_text(
    text='Really Big',
    align='right',
    baseline='middle',
    dx=-10,
    dy=126
).encode(
    x='hp',
    y=alt.value(0)  # adjust label position
)

line160labelline  = line160 + line160label

chart_final = chart  + line80labelline + line160labelline

chart_final


```

<br>

**Question 2:** Try writing code to recreate the following table.

- Have `cyl` on the rows and `carb` on the columns
- The values inside the table represent the number of cars with that particular `cyl`/`carb` combination.
- The `pd.crosstab()` function could be helpful, or maybe `pd.pivot_table()`.


|   cyl |   1 |   2 |   3 |   4 |   6 |   8 |
|------:|----:|----:|----:|----:|----:|----:|
|     4 |   5 |   6 |   0 |   0 |   0 |   0 |
|     6 |   2 |   0 |   0 |   4 |   1 |   0 |
|     8 |   0 |   4 |   3 |   6 |   0 |   1 |

**Question 2 Answer:**

_Show your table here._

**Question 2 Code:**

```{python}
# Paste your code here.
```

<br>

**Additional Questions:** On the Final Coding Challenge, I will also ask you to fit a Machine Learning Model. There may be 1-2 additional questions.